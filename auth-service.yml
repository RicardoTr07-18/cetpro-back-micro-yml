spring:
  application:
    name: auth-service

  datasource:
    url: jdbc:postgresql://localhost:5432/Auth
    username: postgres
    password: 1234
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: none
    open-in-view: false

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    registry-fetch-interval-seconds: 30
    initial-instance-info-replication-interval-seconds: 30
  instance:
    prefer-ip-address: true
    hostname: localhost
    lease-renewal-interval-seconds: 15
    lease-expiration-duration-seconds: 40

jwt:
  secret: 08725e547914eb52b7abba9bdfe7be4a2a5e6b8d9ca977d84a20816ff4f5023c
  expiration-ms: 28800000

server:
  port: 8083

management:
  endpoints:
    web:
      exposure:
        include: info, health

logging:
  level:
    root: WARN
    org.springframework: WARN
    org.hibernate.SQL: OFF
    org.hibernate.type.descriptor.sql.BasicBinder: OFF
    com.netflix.discovery: WARN
    reactor.netty: WARN
    com.rest.api: INFO


info:
  app:
    name: Servicio de auth-service
    description: Contiene roles, permisos, JWT, Spring Security y encriptaci√≥n
